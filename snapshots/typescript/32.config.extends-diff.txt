@ ["parserOptions","project"]
+ "./tsconfig.json"
@ ["rules","@typescript-eslint/ban-ts-comment",0]
- "error"
+ "off"
@ ["rules","@typescript-eslint/ban-types",0]
- "error"
+ "off"
@ ["rules","@typescript-eslint/no-empty-interface",0]
- "error"
+ "off"
@ ["rules","@typescript-eslint/no-explicit-any",0]
- "warn"
+ "off"
@ ["rules","@typescript-eslint/no-inferrable-types",0]
- "error"
+ "off"
@ ["rules","@typescript-eslint/no-non-null-assertion",0]
- "warn"
+ "error"
@ ["rules","@typescript-eslint/no-this-alias",0]
- "error"
+ "warn"
@ ["rules","@typescript-eslint/no-unused-vars",0]
- "warn"
+ "error"
@ ["rules","@typescript-eslint/no-unused-vars",-1]
+ {"args":"all","argsIgnorePattern":"^_","caughtErrors":"all","caughtErrorsIgnorePattern":"^_","ignoreRestSiblings":false,"vars":"all","varsIgnorePattern":"^_"}
@ ["rules","no-extra-semi",0]
- "off"
+ "error"
@ ["rules","no-loss-of-precision",0]
- "off"
+ "error"
@ ["rules","@typescript-eslint/array-type"]
+ ["error",{"default":"array"}]
@ ["rules","@typescript-eslint/await-thenable"]
+ ["off"]
@ ["rules","@typescript-eslint/brace-style"]
+ ["error"]
@ ["rules","@typescript-eslint/consistent-type-assertions"]
+ ["error"]
@ ["rules","@typescript-eslint/consistent-type-definitions"]
+ ["off"]
@ ["rules","@typescript-eslint/consistent-type-exports"]
+ ["error"]
@ ["rules","@typescript-eslint/explicit-function-return-type"]
+ ["error",{"allowExpressions":true,"allowHigherOrderFunctions":true,"allowTypedFunctionExpressions":true}]
@ ["rules","@typescript-eslint/explicit-member-accessibility"]
+ ["off"]
@ ["rules","@typescript-eslint/func-call-spacing"]
+ ["error","never"]
@ ["rules","@typescript-eslint/indent"]
+ ["error",2,{"SwitchCase":0,"VariableDeclarator":{"const":3,"let":2,"var":2},"flatTernaryExpressions":false,"ignoreComments":false,"offsetTernaryExpressions":false}]
@ ["rules","@typescript-eslint/member-delimiter-style"]
+ ["error",{"multiline":{"delimiter":"semi","requireLast":true},"singleline":{"delimiter":"semi","requireLast":true}}]
@ ["rules","@typescript-eslint/member-ordering"]
+ ["error"]
@ ["rules","@typescript-eslint/naming-convention"]
+ ["warn",{"format":["strictCamelCase"],"leadingUnderscore":"allow","selector":"default","trailingUnderscore":"forbid"},{"format":null,"selector":"property"},{"format":["StrictPascalCase"],"leadingUnderscore":"forbid","selector":"class","trailingUnderscore":"forbid"},{"custom":{"match":true,"regex":"^[A-Z][a-zA-Z0-9]*$"},"format":["PascalCase"],"selector":["typeAlias","typeParameter"]},{"format":["strictCamelCase"],"leadingUnderscore":"require","modifiers":["private"],"selector":"memberLike"},{"custom":{"match":false,"regex":"^I[A-Z]"},"format":["StrictPascalCase"],"selector":"interface"}]
@ ["rules","@typescript-eslint/no-extra-parens"]
+ ["off"]
@ ["rules","@typescript-eslint/no-extraneous-class"]
+ ["error"]
@ ["rules","@typescript-eslint/no-floating-promises"]
+ ["error"]
@ ["rules","@typescript-eslint/no-loop-func"]
+ ["error"]
@ ["rules","@typescript-eslint/no-magic-numbers"]
+ ["off"]
@ ["rules","@typescript-eslint/no-misused-promises"]
+ ["error",{"checksVoidReturn":false}]
@ ["rules","@typescript-eslint/no-parameter-properties"]
+ ["error"]
@ ["rules","@typescript-eslint/no-require-imports"]
+ ["error"]
@ ["rules","@typescript-eslint/no-type-alias"]
+ ["off"]
@ ["rules","@typescript-eslint/no-unnecessary-condition"]
+ ["error",{"allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing":true}]
@ ["rules","@typescript-eslint/no-unnecessary-qualifier"]
+ ["error"]
@ ["rules","@typescript-eslint/no-unnecessary-type-arguments"]
+ ["error"]
@ ["rules","@typescript-eslint/no-unnecessary-type-assertion"]
+ ["error"]
@ ["rules","@typescript-eslint/no-use-before-define"]
+ ["error",{"classes":false,"variables":false}]
@ ["rules","@typescript-eslint/no-useless-constructor"]
+ ["error"]
@ ["rules","@typescript-eslint/prefer-for-of"]
+ ["error"]
@ ["rules","@typescript-eslint/prefer-function-type"]
+ ["off"]
@ ["rules","@typescript-eslint/prefer-includes"]
+ ["error"]
@ ["rules","@typescript-eslint/prefer-readonly"]
+ ["off"]
@ ["rules","@typescript-eslint/prefer-regexp-exec"]
+ ["error"]
@ ["rules","@typescript-eslint/prefer-string-starts-ends-with"]
+ ["error"]
@ ["rules","@typescript-eslint/promise-function-async"]
+ ["error"]
@ ["rules","@typescript-eslint/require-await"]
+ ["off"]
@ ["rules","@typescript-eslint/restrict-plus-operands"]
+ ["error"]
@ ["rules","@typescript-eslint/semi"]
+ ["error"]
@ ["rules","@typescript-eslint/strict-boolean-expressions"]
+ ["error",{"allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing":true}]
@ ["rules","@typescript-eslint/type-annotation-spacing"]
+ ["error"]
@ ["rules","@typescript-eslint/typedef"]
+ ["off"]
@ ["rules","@typescript-eslint/unbound-method"]
+ ["off"]
@ ["rules","@typescript-eslint/unified-signatures"]
+ ["error"]
@ ["rules","brace-style"]
+ ["off"]
@ ["rules","camelcase"]
+ ["off"]
@ ["rules","consistent-this"]
+ ["off"]
@ ["rules","constructor-super"]
+ ["error"]
@ ["rules","func-call-spacing"]
+ ["off"]
@ ["rules","getter-return"]
+ ["error"]
@ ["rules","global-require"]
+ ["off"]
@ ["rules","indent"]
+ ["off"]
@ ["rules","no-const-assign"]
+ ["error"]
@ ["rules","no-dupe-args"]
+ ["error"]
@ ["rules","no-dupe-class-members"]
+ ["error"]
@ ["rules","no-dupe-keys"]
+ ["error"]
@ ["rules","no-extra-parens"]
+ ["off"]
@ ["rules","no-func-assign"]
+ ["error"]
@ ["rules","no-import-assign"]
+ ["error"]
@ ["rules","no-loop-func"]
+ ["off"]
@ ["rules","no-magic-numbers"]
+ ["off"]
@ ["rules","no-new-symbol"]
+ ["error"]
@ ["rules","no-obj-calls"]
+ ["error"]
@ ["rules","no-redeclare"]
+ ["error"]
@ ["rules","no-setter-return"]
+ ["error"]
@ ["rules","no-this-before-super"]
+ ["warn"]
@ ["rules","no-unreachable"]
+ ["error"]
@ ["rules","no-unsafe-negation"]
+ ["error"]
@ ["rules","no-use-before-define"]
+ ["off"]
@ ["rules","no-useless-constructor"]
+ ["off"]
@ ["rules","no-var"]
+ ["error"]
@ ["rules","prefer-const"]
+ ["off"]
@ ["rules","prefer-rest-params"]
+ ["error"]
@ ["rules","prefer-spread"]
+ ["error"]
@ ["rules","require-await"]
+ ["off"]
@ ["rules","semi"]
+ ["off"]
@ ["rules","valid-typeof"]
+ ["error"]
@ ["settings","jsdoc"]
+ {"mode":"typescript"}
