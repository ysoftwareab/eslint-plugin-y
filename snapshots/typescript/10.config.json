{
  "env": {},
  "globals": {},
  "ignorePatterns": [],
  "parser": "/Users/andrei/git/ysoftwareab/eslint-plugin-y/node_modules/@typescript-eslint/parser/dist/index.js",
  "parserOptions": {
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "rules": {
    "@typescript-eslint/adjacent-overload-signatures": [
      "error"
    ],
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array"
      }
    ],
    "@typescript-eslint/await-thenable": [
      "off"
    ],
    "@typescript-eslint/ban-ts-comment": [
      "off"
    ],
    "@typescript-eslint/ban-types": [
      "off"
    ],
    "@typescript-eslint/brace-style": [
      "error"
    ],
    "@typescript-eslint/consistent-type-assertions": [
      "error"
    ],
    "@typescript-eslint/consistent-type-definitions": [
      "off"
    ],
    "@typescript-eslint/consistent-type-exports": [
      "error"
    ],
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true,
        "allowHigherOrderFunctions": true,
        "allowTypedFunctionExpressions": true
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": [
      "off"
    ],
    "@typescript-eslint/func-call-spacing": [
      "error",
      "never"
    ],
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "SwitchCase": 0,
        "VariableDeclarator": {
          "const": 3,
          "let": 2,
          "var": 2
        },
        "flatTernaryExpressions": false,
        "ignoreComments": false,
        "offsetTernaryExpressions": false
      }
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": true
        }
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error"
    ],
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "format": [
          "strictCamelCase"
        ],
        "leadingUnderscore": "allow",
        "selector": "default",
        "trailingUnderscore": "forbid"
      },
      {
        "format": null,
        "selector": "property"
      },
      {
        "format": [
          "StrictPascalCase"
        ],
        "leadingUnderscore": "forbid",
        "selector": "class",
        "trailingUnderscore": "forbid"
      },
      {
        "custom": {
          "match": true,
          "regex": "^[A-Z][a-zA-Z]+$"
        },
        "format": [
          "PascalCase"
        ],
        "selector": [
          "typeAlias",
          "typeParameter"
        ]
      },
      {
        "format": [
          "strictCamelCase"
        ],
        "leadingUnderscore": "require",
        "modifiers": [
          "private"
        ],
        "selector": "memberLike"
      },
      {
        "custom": {
          "match": false,
          "regex": "^I[A-Z]"
        },
        "format": [
          "StrictPascalCase"
        ],
        "selector": "interface"
      }
    ],
    "@typescript-eslint/no-array-constructor": [
      "error"
    ],
    "@typescript-eslint/no-empty-function": [
      "error"
    ],
    "@typescript-eslint/no-empty-interface": [
      "off"
    ],
    "@typescript-eslint/no-explicit-any": [
      "off"
    ],
    "@typescript-eslint/no-extra-non-null-assertion": [
      "error"
    ],
    "@typescript-eslint/no-extra-parens": [
      "off"
    ],
    "@typescript-eslint/no-extra-semi": [
      "error"
    ],
    "@typescript-eslint/no-extraneous-class": [
      "error"
    ],
    "@typescript-eslint/no-floating-promises": [
      "error"
    ],
    "@typescript-eslint/no-inferrable-types": [
      "off"
    ],
    "@typescript-eslint/no-loss-of-precision": [
      "error"
    ],
    "@typescript-eslint/no-magic-numbers": [
      "off"
    ],
    "@typescript-eslint/no-misused-new": [
      "error"
    ],
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/no-namespace": [
      "error"
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": [
      "error"
    ],
    "@typescript-eslint/no-non-null-assertion": [
      "error"
    ],
    "@typescript-eslint/no-parameter-properties": [
      "error"
    ],
    "@typescript-eslint/no-require-imports": [
      "error"
    ],
    "@typescript-eslint/no-this-alias": [
      "warn"
    ],
    "@typescript-eslint/no-type-alias": [
      "off"
    ],
    "@typescript-eslint/no-unnecessary-condition": [
      "error",
      {
        "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": true
      }
    ],
    "@typescript-eslint/no-unnecessary-qualifier": [
      "error"
    ],
    "@typescript-eslint/no-unnecessary-type-arguments": [
      "error"
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": [
      "error"
    ],
    "@typescript-eslint/no-unnecessary-type-constraint": [
      "error"
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "args": "all",
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_",
        "ignoreRestSiblings": false,
        "vars": "all",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "classes": false,
        "variables": false
      }
    ],
    "@typescript-eslint/no-useless-constructor": [
      "error"
    ],
    "@typescript-eslint/no-var-requires": [
      "error"
    ],
    "@typescript-eslint/prefer-as-const": [
      "error"
    ],
    "@typescript-eslint/prefer-for-of": [
      "error"
    ],
    "@typescript-eslint/prefer-function-type": [
      "off"
    ],
    "@typescript-eslint/prefer-includes": [
      "error"
    ],
    "@typescript-eslint/prefer-namespace-keyword": [
      "error"
    ],
    "@typescript-eslint/prefer-readonly": [
      "off"
    ],
    "@typescript-eslint/prefer-regexp-exec": [
      "error"
    ],
    "@typescript-eslint/prefer-string-starts-ends-with": [
      "error"
    ],
    "@typescript-eslint/promise-function-async": [
      "error"
    ],
    "@typescript-eslint/require-await": [
      "off"
    ],
    "@typescript-eslint/restrict-plus-operands": [
      "error"
    ],
    "@typescript-eslint/semi": [
      "error"
    ],
    "@typescript-eslint/strict-boolean-expressions": [
      "error",
      {
        "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": true
      }
    ],
    "@typescript-eslint/triple-slash-reference": [
      "error"
    ],
    "@typescript-eslint/type-annotation-spacing": [
      "error"
    ],
    "@typescript-eslint/typedef": [
      "off"
    ],
    "@typescript-eslint/unbound-method": [
      "off"
    ],
    "@typescript-eslint/unified-signatures": [
      "error"
    ],
    "brace-style": [
      "off"
    ],
    "camelcase": [
      "off"
    ],
    "consistent-this": [
      "off"
    ],
    "constructor-super": [
      "error"
    ],
    "func-call-spacing": [
      "off"
    ],
    "getter-return": [
      "error"
    ],
    "global-require": [
      "off"
    ],
    "indent": [
      "off"
    ],
    "no-array-constructor": [
      "off"
    ],
    "no-const-assign": [
      "error"
    ],
    "no-dupe-args": [
      "error"
    ],
    "no-dupe-class-members": [
      "error"
    ],
    "no-dupe-keys": [
      "error"
    ],
    "no-empty-function": [
      "off"
    ],
    "no-extra-parens": [
      "off"
    ],
    "no-extra-semi": [
      "error"
    ],
    "no-func-assign": [
      "error"
    ],
    "no-import-assign": [
      "error"
    ],
    "no-loss-of-precision": [
      "error"
    ],
    "no-magic-numbers": [
      "off"
    ],
    "no-new-symbol": [
      "error"
    ],
    "no-obj-calls": [
      "error"
    ],
    "no-redeclare": [
      "error"
    ],
    "no-setter-return": [
      "error"
    ],
    "no-this-before-super": [
      "warn"
    ],
    "no-unreachable": [
      "error"
    ],
    "no-unsafe-negation": [
      "error"
    ],
    "no-unused-vars": [
      "off"
    ],
    "no-use-before-define": [
      "off"
    ],
    "no-useless-constructor": [
      "off"
    ],
    "no-var": [
      "error"
    ],
    "prefer-const": [
      "off"
    ],
    "prefer-rest-params": [
      "error"
    ],
    "prefer-spread": [
      "error"
    ],
    "require-await": [
      "off"
    ],
    "semi": [
      "off"
    ],
    "valid-typeof": [
      "error"
    ]
  },
  "settings": {
    "jsdoc": {
      "mode": "typescript"
    }
  }
}
